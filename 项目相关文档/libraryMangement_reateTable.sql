-- 1.图书管理员
CREATE TABLE ADMIN_USERS(
	AD_ID INT AUTO_INCREMENT PRIMARY KEY,
	AD_NAME VARCHAR(50) NOT NULL, -- 名字
	AD_PASS VARCHAR(100) NOT NULL,-- 密码
	AD_SEX TINYINT(1) ,-- 性别
	AD_PHONE VARCHAR(100),-- 电话
	AD_JUR INT REFERENCES ADMIN_JUR(JUR_ID),  -- 权限
	AD_TIME DATETIME-- TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP -- 注册时间(当前时间)
)AUTO_INCREMENT=600000;
-- 3.管理员类型
CREATE TABLE ADMIN_JUR(
	JUR_ID INT AUTO_INCREMENT PRIMARY KEY,
	JUR_TYPE VARCHAR(50)
)
INSERT INTO ADMIN_USERS(AD_NAME,AD_PASS,AD_SEX,AD_PHONE,AD_JUR,AD_TIME) VALUES('zachary','123456',1,'13189533358',1,NOW());
SELECT * FROM ADMIN_USERS WHERE AD_NAME = 'zachary' AND AD_PASS = '123456'
SELECT * FROM ADMIN_USERS GROUP BY AD_ID DESC;

-- 4.读者
CREATE TABLE READER_USERS(
	RE_ID INT AUTO_INCREMENT PRIMARY KEY,
	RE_NAME VARCHAR(50) NOT NULL, -- 读者名字
	RE_SEX TINYINT(1) , -- 性别
	RE_PHONE VARCHAR(20), -- 电话
	RE_ADDRESS VARCHAR(200),-- 地址
	RE_CREDIT INT-- 信用积分
)AUTO_INCREMENT=500000;
INSERT INTO READER_USERS(RE_NAME,RE_SEX,RE_PHONE,RE_ADDRESS,RE_CREDIT) 
VALUES('zachary',0,'134564654','138',100);
DELETE FROM READER_USERS WHERE RE_ID = 500003
SELECT * FROM READER_USERS

-- 5.图书信息
CREATE TABLE INFORMATION_BOOKS(
	IN_ID INT AUTO_INCREMENT PRIMARY KEY,-- 图书编号
	IN_NAME VARCHAR(50), -- 图书名字
	IN_AUTHOR VARCHAR(50), -- 图书作者
	IN_PUBLICATIONTIME DATETIME,-- 出版时间
	IN_UPLIBRARYTIME DATETIME,-- 入馆时间
	IN_UPDATETIME DATETIME,-- 最近更新时间
	IN_PRESS VARCHAR(100), -- 出版社
	IN_PRICE DOUBLE, -- 价格
	IN_NUM INT, -- 数量
	IN_BORROWFROM TINYINT(1),-- 是否允许外借
	TY_ID INT REFERENCES TYPE_BOOKS(TY_ID) -- 图书类型外键
)AUTO_INCREMENT=400000;
SELECT * FROM INFORMATION_BOOKS I JOIN TYPE_BOOKS T ON I.TY_ID=T.TY_ID;
SELECT * FROM INFORMATION_BOOKS I JOIN TYPE_BOOKS T ON I.TY_ID=T.TY_ID WHERE I.TY_ID=1;
INSERT INTO INFORMATION_BOOKS(IN_NAME,IN_AUTHOR,IN_PUBLICATIONTIME,IN_UPLIBRARYTIME,IN_UPDATETIME,IN_PRESS,IN_PRICE,IN_NUM,IN_BORROWFROM,TY_ID)
VALUES('平凡的世界','路遥',NOW(),NOW(),NOW(),'北京十月文艺出版社','50',30,1,1);


-- 6.图书类型
CREATE TABLE TYPE_BOOKS(
	TY_ID INT AUTO_INCREMENT PRIMARY KEY,
	TY_NAME VARCHAR(50) -- 类型名称
);
INSERT INTO TYPE_BOOKS(TY_NAME)VALUES('民间故事');
INSERT INTO TYPE_BOOKS(TY_NAME)VALUES('数学');
SELECT * FROM TYPE_BOOKS;

-- 7.借阅记录
CREATE TABLE BORROW_BOOKS(
	BOR_ID INT AUTO_INCREMENT PRIMARY KEY,
	BOR_TIME DATETIME , -- 借书时间
	BOR_TIME_LAST DATETIME, -- 阅读期限
	BOR_NUM INT , -- 借阅册数
  BOR_RETURN INT,-- 是否归还
	IN_ID INT REFERENCES INFORMATION_BOOKS(IN_ID),  -- 图书外键
	RE_ID INT REFERENCES READER_USERS(RE_ID), -- 读者id外键
	AD_ID INT REFERENCES ADMIN_USERS(AD_ID) -- 图书管理员
)AUTO_INCREMENT=100000;
INSERT INTO BORROW_BOOKS(BOR_TIME,BOR_TIME_LAST,BOR_NUM,BOR_RETURN,IN_ID,RE_ID,AD_ID)VALUES(NOW(),NOW(),1,1,400000,500004,600002);
--
SELECT * FROM BORROW_BOOKS B JOIN INFORMATION_BOOKS T ON B.IN_ID = T.IN_ID JOIN READER_USERS R ON R.RE_ID = B.RE_ID
 JOIN ADMIN_USERS A ON A.AD_ID = B.AD_ID WHERE B.BOR_RETURN = 1 ORDER BY BOR_ID DESC LIMIT 0,10;

SELECT * FROM BORROW_BOOKS B JOIN INFORMATION_BOOKS T ON B.IN_ID = T.IN_ID JOIN READER_USERS R ON R.RE_ID = B.RE_ID
JOIN ADMIN_USERS A ON A.AD_ID = B.AD_ID WHERE B.BOR_RETURN = 1 ORDER BY BOR_ID DESC

UPDATE BORROW_BOOKS SET BOR_RETURN = 1 WHERE BOR_ID =100000;
-- 8.归还记录
CREATE TABLE RETURN_BOOKS(
	RET_ID INT AUTO_INCREMENT PRIMARY KEY,
	RET_TIME DATETIME,-- 归还时间
	RET_NUM INT, -- 归还数量
	BOR_ID INT REFERENCES BORROW_BOOKS(BOR_ID) -- 外键借阅记录
	-- IN_ID INT REFERENCES TABLEINFORMATION_BOOK(IN_ID),  -- 图书外键
	-- RE_ID INT REFERENCES READER_USERS(RE_ID), -- 读者id外键
	-- AD_ID INT REFERENCES ADMIN_USERS(AD_ID) -- 图书管理员
)AUTO_INCREMENT=200000;
INSERT INTO RETURN_BOOKS(RET_TIME,RET_NUM,IN_ID)VALUES();
INSERT INTO RETURN_BOOKS(RET_TIME,RET_NUM,BOR_ID)VALUES(NOW(),1,100001)

SELECT * FROM RETURN_BOOKS R_B LEFT JOIN (SELECT B.BOR_TIME,B.BOR_ID,T.IN_ID,T.IN_NAME,R.RE_ID,R.RE_NAME,R.RE_CREDIT,A.AD_NAME FROM BORROW_BOOKS B 
JOIN INFORMATION_BOOKS T ON B.IN_ID = T.IN_ID JOIN READER_USERS R ON R.RE_ID = B.RE_ID
JOIN ADMIN_USERS A ON A.AD_ID = B.AD_ID) AA ON R_B.BOR_ID = AA.BOR_ID

SELECT COUNT(*) FROM RETURN_BOOKS

-- 9.罚金记录(如果要罚，则罚完在插入归还记录)
CREATE TABLE REGISTER_FINE(
	RF_ID INT AUTO_INCREMENT PRIMARY KEY, -- 罚金记录编号
	RF_EXPLAIN VARCHAR(500), -- 罚金说明
	RF_MONEY DOUBLE , -- 罚金
	TF_ID INT REFERENCES TYPE_FIND(TF_ID) , -- 外键罚金类型
	BOR_ID INT REFERENCES BORROW_BOOKS(BOR_ID) -- 外键借阅记录
)AUTO_INCREMENT=300000;
INSERT INTO REGISTER_FINE(RF_EXPLAIN,RF_MONEY,TF_ID,RE_ID)VALUES();
-- 罚金编号、借阅人，编号，金额，罚金说明，类型，时间

SELECT * FROM RETURN_BOOKS R_B JOIN (SELECT B.BOR_TIME,B.BOR_ID,R.RE_ID,R.RE_NAME FROM BORROW_BOOKS B 
JOIN READER_USERS R ON R.RE_ID = B.RE_ID) AA ON R_B.BOR_ID = AA.BOR_ID

SELECT * FROM REGISTER_FINE R_F JOIN TYPE_FIND T_F ON R_F.TF_ID = T_F.TF_ID
JOIN (SELECT R_B.RET_ID,R_B.RET_TIME,R_B.RET_NUM,AA.BOR_TIME,AA.BOR_ID,AA.RE_ID,AA.RE_NAME FROM RETURN_BOOKS R_B 
JOIN (SELECT B.BOR_TIME,B.BOR_ID,R.RE_ID,R.RE_NAME FROM BORROW_BOOKS B 
JOIN READER_USERS R ON R.RE_ID = B.RE_ID) AA ON R_B.BOR_ID = AA.BOR_ID) INF1 ON R_F.BOR_ID = INF1.BOR_ID ORDER BY RF_ID DESC

-- 10罚金类型
CREATE TABLE TYPE_FIND(
	TF_ID INT AUTO_INCREMENT PRIMARY KEY,
	TF_TYPE VARCHAR(50) -- 罚金类型名称
);





